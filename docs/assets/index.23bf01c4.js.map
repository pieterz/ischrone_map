{
    "version": 3,
    "file": "index.23bf01c4.js",
    "sources": [
        "../../vite/modulepreload-polyfill",
        "../../main.js"
    ],
    "sourcesContent": [
        "const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();",
        "import './style.css';\nimport { Map, View } from 'ol';\nimport TileLayer from 'ol/layer/Tile';\nimport LayerVector from 'ol/layer/vector';\nimport { OSM, Vector as VectorSource } from 'ol/source';\nimport { Point, LineString, Polygon } from 'ol/geom';\nimport { fromLonLat, transform } from 'ol/proj';\nimport { Control, ScaleLine, MousePosition, Attribution, FullScreen, defaults as defaultControls, OverviewMap } from 'ol/control';\nimport Feature from 'ol/Feature';\nimport { Circle, Fill, Stroke, Style } from 'ol/style';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport { createStringXY } from 'ol/coordinate.js';\n\nlet isoButtonFlag = false;\n\nvar mapView = new View({\n  center: fromLonLat([4.887, 52.373]),\n  zoom: 10\n});\n\nconst map = new Map({\n  target: 'map',\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    })\n  ],\n  view: mapView\n});\n\n// This will show use the coordinate of your mouse position in EPSG:4326. You can change this to any other EPSG.\nvar mouse_position = new MousePosition({\n  className: 'mousePosition',\n  placeholder: [],\n  coordinateFormat: createStringXY(3),\n  projection: 'EPSG:4326'\n});\nmap.addControl(mouse_position);\n\nmap.addControl(new ScaleLine({\n  unit: 'metric'\n}));\n\n// Isochrone tool\nvar isoButton = document.createElement('button');\nisoButton.innerHTML = '<img src=\"https://cdn-icons.flaticon.com/png/512/2838/premium/2838560.png?token=exp=1649713187~hmac=009a7cf4fc1f692e5c969fdee321eceb\" alt=\"\" class=\"myImg\"></img>';\nisoButton.className = 'myButton';\nisoButton.id = 'isoButton';\nisoButton.title = 'Isochrone tool';\n\nvar isoElement = document.createElement('div');\nisoElement.className = 'isoButtonDiv';\nisoElement.appendChild(isoButton);\n\nvar isoControl = new Control({\n  element: isoElement\n})\n\nmap.addControl(isoControl);\n\ndocument.getElementById('getCoord').onclick = function () {\n  document.getElementById(\"map\").style.cursor = \"crosshair\";\n\n  //here is you callback function\n  function myCallback(evt) {\n    map.getLayers().getArray()\n      .filter(layer => layer.get('name') === 'isochroneStartPoint')\n      .forEach(layer => map.removeLayer(layer));\n\n    let coordinates = transform(evt.coordinate, 'EPSG:3857', 'EPSG:4326')\n    document.getElementById(\"coordValueX\").value = coordinates[0].toFixed(4);\n    document.getElementById(\"coordValueY\").value = coordinates[1].toFixed(4);\n\n    const point = new Point(evt.coordinate);\n\n    let pointLayer = new LayerVector({\n      title: \"Starting point\",\n      name: \"isochroneStartPoint\",\n      source: new VectorSource({\n        features: [new Feature(point)],\n      }),\n      style: new Style({\n        image: new Circle({\n          radius: 3,\n          fill: new Fill({ color: 'black' }),\n        }),\n      }),\n    });\n\n    pointLayer.setZIndex(10);\n    map.addLayer(pointLayer);\n\n    //To unbind the event\n    map.un('singleclick', myCallback);\n    document.getElementById(\"map\").style.cursor = \"auto\";\n  }\n\n  //To bind the event \n  map.on('singleclick', myCallback);\n}\n\nisoButton.addEventListener(\"click\", () => {\n  isoButtonFlag = !isoButtonFlag\n  if (isoButtonFlag) {\n    document.getElementById(\"isochroneTool\").style.display = \"block\";\n  } else {\n    document.getElementById(\"isochroneTool\").style.display = \"none\";\n  }\n});\n\ndocument.getElementById('runIsochroneTool').onclick = function () {\n  if (document.getElementById(\"timeInput\").value.split(\",\").map(Number) < 1) {\n    alert(\"No valid format for time. Use: 5, 10, 15\")\n  } else if (document.getElementById(\"timeInput\").value.split(\",\").map(Number).includes(NaN)) {\n    alert(\"No valid format for time. Use: 5, 10, 15\");\n  } else if (document.getElementById(\"timeInput\").value.split(\",\").map(Number) > 9) {\n    alert(\"The maximum isochrones are 10\");\n  } else if (document.getElementById(\"coordValueX\").value == '') {\n    alert(\"Input a X coordinate. Tip use the Starting Point button\");\n  } else if (document.getElementById(\"coordValueY\").value == '') {\n    alert(\"Input a Y coordinate. Tip use the Starting Point button\");\n  } else {\n    // Remove old layers\n    map.getLayers().getArray()\n      .filter(layer => layer.get('name') === 'isochrone')\n      .forEach(layer => map.removeLayer(layer));\n\n    // Initial settings\n    let transportMode = document.querySelector('input[name=\"transportmode\"]:checked').value;\n    let coordValueX = document.getElementById(\"coordValueX\").value;\n    let coordValueY = document.getElementById(\"coordValueY\").value;\n    let timeInput = document.getElementById(\"timeInput\").value;\n    let contourMinutes = timeInput.split(\",\").map(Number);\n    let access_token = \"pk.eyJ1IjoienBpZXRlciIsImEiOiJja2lla2F5OTYwYXR6MnlxdWp4NTd6Ymg0In0.WBB-07UorMMN67LGzSJPPw\"\n    let urls = []\n\n    console.log(contourMinutes)\n    // Make array with urls\n    for (let i = contourMinutes.length - 1; i >= 0; i--) {\n      urls.push(`https://api.mapbox.com/isochrone/v1/mapbox/${transportMode}/${coordValueX}%2C${coordValueY}?contours_minutes=${contourMinutes[i]}&polygons=true&denoise=1&access_token=${access_token}`)\n    }\n\n    // Colors for up to 10 layers\n    let colors = [\"rgba(43, 131, 186, 0.5)\", \"rgba(100, 171, 176, 0.5)\", \"rgba(157, 211, 167, 0.5)\", \"rgba(199, 233, 173, 0.5)\", \"rgba(237, 248, 185, 0.5)\", \"rgba(255, 237, 170, 0.5)\", \"rgba(254, 201, 128, 0.5)\", \"rgba(232, 91, 58, 0.5)\", \"rgba(215, 25, 28, 0.5)\"]\n\n    // Retrieve isochrones and add to map\n    Promise.all(urls.map(url => fetch(url)))\n      .then(resp => Promise.all(resp.map(r => r.json())))\n      .then(jsonData => {\n        jsonData.forEach(function (data, i) {\n          let querySelectedFeatureStyle = new Style({\n            fill: new Fill({\n              color: colors[i],\n            }),\n            stroke: new Stroke({\n              color: \"white\",\n              width: 1,\n            })\n          });\n\n          let isolayer = new LayerVector({\n            title: `isochrone_${transportMode}_${contourMinutes[i]}`,\n            name: \"isochrone\",\n            source: new VectorSource({\n              features: new GeoJSON().readFeatures(data, { dataProjection: 'EPSG:4326', featureProjection: 'EPSG:3857' })\n            }),\n            style: querySelectedFeatureStyle,\n          });\n          map.addLayer(isolayer);\n        })\n      });\n  }\n}"
    ],
    "names": [],
    "mappings": "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"
}