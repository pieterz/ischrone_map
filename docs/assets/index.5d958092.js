import{V as w,f as b,M as B,T as S,O as L,a as P,c as N,S as k,C as V,b as g,F as f,d as C,L as y,e as h,G as F,t as M,P as T,g as O,h as Y}from"./vendor.f9117092.js";const G=function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))c(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const i of t.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&c(i)}).observe(document,{childList:!0,subtree:!0});function l(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerpolicy&&(t.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?t.credentials="include":e.crossorigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function c(e){if(e.ep)return;e.ep=!0;const t=l(e);fetch(e.href,t)}};G();let m=!1;var X=new w({center:b([4.887,52.373]),zoom:10});const n=new B({target:"map",layers:[new S({source:new L})],view:X});var j=new P({className:"mousePosition",placeholder:[],coordinateFormat:N(3),projection:"EPSG:4326"});n.addControl(j);n.addControl(new k({unit:"metric"}));var s=document.createElement("button");s.innerHTML='<img src="./assets/duration.svg" alt="" class="myImg"></img>';s.className="myButton";s.id="isoButton";s.title="Isochrone tool";var d=document.createElement("div");d.className="isoButtonDiv";d.appendChild(s);var x=new V({element:d});n.addControl(x);document.getElementById("getCoord").onclick=function(){document.getElementById("map").style.cursor="crosshair";function a(r){n.getLayers().getArray().filter(t=>t.get("name")==="isochroneStartPoint").forEach(t=>n.removeLayer(t));let l=M(r.coordinate,"EPSG:3857","EPSG:4326");document.getElementById("coordValueX").value=l[0].toFixed(4),document.getElementById("coordValueY").value=l[1].toFixed(4);const c=new T(r.coordinate);let e=new y({title:"Starting point",name:"isochroneStartPoint",source:new h({features:[new O(c)]}),style:new g({image:new Y({radius:3,fill:new f({color:"black"})})})});e.setZIndex(10),n.addLayer(e),n.un("singleclick",a),document.getElementById("map").style.cursor="auto"}n.on("singleclick",a)};s.addEventListener("click",()=>{m=!m,m?document.getElementById("isochroneTool").style.display="block":document.getElementById("isochroneTool").style.display="none"});document.getElementById("runIsochroneTool").onclick=function(){if(document.getElementById("timeInput").value.split(",").map(Number)<1)alert("No valid format for time. Use: 5, 10, 15");else if(document.getElementById("timeInput").value.split(",").map(Number).includes(NaN))alert("No valid format for time. Use: 5, 10, 15");else if(document.getElementById("timeInput").value.split(",").map(Number)>9)alert("The maximum isochrones are 10");else if(document.getElementById("coordValueX").value=="")alert("Input a X coordinate. Tip use the Starting Point button");else if(document.getElementById("coordValueY").value=="")alert("Input a Y coordinate. Tip use the Starting Point button");else{n.getLayers().getArray().filter(o=>o.get("name")==="isochrone").forEach(o=>n.removeLayer(o));let a=document.querySelector('input[name="transportmode"]:checked').value,r=document.getElementById("coordValueX").value,l=document.getElementById("coordValueY").value,e=document.getElementById("timeInput").value.split(",").map(Number),t="pk.eyJ1IjoienBpZXRlciIsImEiOiJja2lla2F5OTYwYXR6MnlxdWp4NTd6Ymg0In0.WBB-07UorMMN67LGzSJPPw",i=[];console.log(e);for(let o=e.length-1;o>=0;o--)i.push(`https://api.mapbox.com/isochrone/v1/mapbox/${a}/${r}%2C${l}?contours_minutes=${e[o]}&polygons=true&denoise=1&access_token=${t}`);let I=["rgba(43, 131, 186, 0.5)","rgba(100, 171, 176, 0.5)","rgba(157, 211, 167, 0.5)","rgba(199, 233, 173, 0.5)","rgba(237, 248, 185, 0.5)","rgba(255, 237, 170, 0.5)","rgba(254, 201, 128, 0.5)","rgba(232, 91, 58, 0.5)","rgba(215, 25, 28, 0.5)"];Promise.all(i.map(o=>fetch(o))).then(o=>Promise.all(o.map(u=>u.json()))).then(o=>{o.forEach(function(u,p){let E=new g({fill:new f({color:I[p]}),stroke:new C({color:"white",width:1})}),v=new y({title:`isochrone_${a}_${e[p]}`,name:"isochrone",source:new h({features:new F().readFeatures(u,{dataProjection:"EPSG:4326",featureProjection:"EPSG:3857"})}),style:E});n.addLayer(v)})})}};
//# sourceMappingURL=index.5d958092.js.map
